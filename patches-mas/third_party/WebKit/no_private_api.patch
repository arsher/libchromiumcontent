diff --git a/Source/platform/mac/KillRingMac.mm b/Source/platform/mac/KillRingMac.mm
index 63fd8f8..de3a3b2 100644
--- a/Source/platform/mac/KillRingMac.mm
+++ b/Source/platform/mac/KillRingMac.mm
@@ -32,12 +32,14 @@ extern "C" {
 
 // Kill ring calls. Would be better to use NSKillRing.h, but that's not available as API or SPI.
 
+#ifndef MAS_BUILD
 void _NSInitializeKillRing();
 void _NSAppendToKillRing(NSString *);
 void _NSPrependToKillRing(NSString *);
 NSString *_NSYankFromKillRing();
 void _NSNewKillRingSequence();
 void _NSSetKillRingToYankedState();
+#endif
 
 }
 
@@ -46,38 +48,52 @@ static void initializeKillRingIfNeeded()
     static bool initializedKillRing = false;
     if (!initializedKillRing) {
         initializedKillRing = true;
+#ifndef MAS_BUILD
         _NSInitializeKillRing();
+#endif
     }
 }
 
 void KillRing::append(const String& string)
 {
     initializeKillRingIfNeeded();
+#ifndef MAS_BUILD
     _NSAppendToKillRing(string);
+#endif
 }
 
 void KillRing::prepend(const String& string)
 {
     initializeKillRingIfNeeded();
+#ifndef MAS_BUILD
     _NSPrependToKillRing(string);
+#endif
 }
 
 String KillRing::yank()
 {
     initializeKillRingIfNeeded();
+#ifndef MAS_BUILD
     return _NSYankFromKillRing();
+#else
+    return "";
+#endif
 }
 
 void KillRing::startNewSequence()
 {
     initializeKillRingIfNeeded();
+#ifndef MAS_BUILD
     _NSNewKillRingSequence();
+#endif
 }
 
 void KillRing::setToYankedState()
 {
     initializeKillRingIfNeeded();
+#ifndef MAS_BUILD
     _NSSetKillRingToYankedState();
+#endif
 }
 
 } // namespace blink
